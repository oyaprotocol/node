# ═══════════════════════════════════════════════════════════════════════════════
#                          OYA PROTOCOL NODE CONFIGURATION
# ═══════════════════════════════════════════════════════════════════════════════
#
# Copy this file to .env and fill in your actual values.
# DO NOT commit the .env file to version control.
#

# ─────────────────────────────────────────────────────────────────────────────
# AUTHENTICATION
# ─────────────────────────────────────────────────────────────────────────────

# Bearer token for authenticating POST requests to the node
# Used by the web app when sending intentions to the proposer
# Should be at least 32 characters for security
# Generate with: openssl rand -hex 32
API_BEARER_TOKEN=your-secret-bearer-token-at-least-32-characters-long

# ─────────────────────────────────────────────────────────────────────────────
# DATABASE
# ─────────────────────────────────────────────────────────────────────────────

# PostgreSQL connection string
# Format: postgresql://[user]:[password]@[host]:[port]/[database]
DATABASE_URL=postgresql://user:password@localhost:5432/oya_db

# Test database connection string (optional)
# If not set, will auto-derive from DATABASE_URL by appending '_test' to database name
# TEST_DATABASE_URL=postgresql://user:password@localhost:5432/oya_db_test

# Enable SSL for database connections (default: true)
# Set to false for local development databases without SSL
# DATABASE_SSL=true

# ─────────────────────────────────────────────────────────────────────────────
# BLOCKCHAIN
# ─────────────────────────────────────────────────────────────────────────────

# Alchemy API key for blockchain RPC access
# Get your key at: https://www.alchemy.com/
# Must be exactly 32 characters
ALCHEMY_API_KEY=your-32-character-alchemy-api-key

# BundleTracker and VaultTracker smart contract addresses on Sepolia testnet
# Current Bundle Tracker Contract Address: 0xF96cd74e7EEcb93a773105269b7ef5187db30aef
# Current Vault Tracker Contract Address: 0x6f2B59f69296c9F045C699472174D878BB4B8aB8
BUNDLE_TRACKER_ADDRESS=0xF96cd74e7EEcb93a773105269b7ef5187db30aef
VAULT_TRACKER_ADDRESS=0x6f2B59f69296c9F045C699472174D878BB4B8aB8

# Public and Private key for the bundle proposer account
# Must have sufficient ETH for gas fees on Sepolia
# Format: 0x followed by 64 hex characters
# NEVER share or commit the private key
PROPOSER_ADDRESS=0xYourPublicKeyHere
PROPOSER_KEY=0xYourPrivateKeyHere

# Your vaultID as the Proposer
# Create a Vault by calling the VaultTracker 'createVault' function, it will return your VaultID
PROPOSER_VAULT_ID=1

# Feature flag for automatically seeding new vaults with OyaTest Tokens
#VAULT_SEEDING=true 



# ─────────────────────────────────────────────────────────────────────────────
# WEBHOOK CONFIGURATION
# ─────────────────────────────────────────────────────────────────────────────
#
# Used when the node (bundle proposer) sends notifications to the web app
# whenever a bundle is proposed or finalized.
#

# Webhook endpoint URL on the web app server
# Example: https://your-webapp.example.com/api/protocol/webhook
WEBHOOK_URL=https://your-webapp.example.com/api/protocol/webhook

# Shared secret for authenticating node → web app webhook requests
# Keep this secret! Never expose it publicly.
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
WEBHOOK_SECRET=your-generated-webhook-secret

# Webhook request timeout in milliseconds (default: 6000)
# Optional; defines how long to wait for a response before retrying
# WEBHOOK_TIMEOUT_MS=6000

# Maximum number of retries for failed webhook deliveries (default: 6)
# Retries use exponential backoff with jitter
# WEBHOOK_MAX_RETRIES=6

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL CONFIGURATION
# ─────────────────────────────────────────────────────────────────────────────

# Server port (default: 3000)
# PORT=3000

# Logging level (default: 3)
# 0=silly, 1=trace, 2=debug, 3=info, 4=warn, 5=error, 6=fatal
# LOG_LEVEL=3

# Enable diagnostic logging for debugging (default: false)
# Set to true for verbose output during development
# DIAGNOSTIC_LOGGER=false

# ─────────────────────────────────────────────────────────────────────────────
# RATE LIMITING
# ─────────────────────────────────────────────────────────────────────────────

# Enable or disable rate limiting middleware (default: true)
# Set to false to disable rate limiting entirely
# RATE_LIMIT_ENABLED=true

# Rate limit window duration in milliseconds (default: 60000 = 1 minute)
# RATE_LIMIT_WINDOW_MS=60000

# Maximum requests per window for permissive tier (default: 300)
# Most lenient - suitable for high-volume endpoints
# RATE_LIMIT_PERMISSIVE=300

# Maximum requests per window for standard tier (default: 100)
# Moderate restrictions - suitable for most endpoints
# RATE_LIMIT_STANDARD=100

# Maximum requests per window for strict tier (default: 50)
# Most restrictive - suitable for sensitive endpoints
# RATE_LIMIT_STRICT=50

# ─────────────────────────────────────────────────────────────────────────────
# FILECOIN PIN (OPTIONAL - ALPHA SOFTWARE)
# ─────────────────────────────────────────────────────────────────────────────

# Enable Filecoin pinning for bundles (default: false)
# NOTE: This is alpha software running on Calibration testnet
# Requires a funded Filecoin wallet with test FIL and test USDFC
# Get test FIL: https://faucet.calibration.fildev.network/
# Get test USDFC: Contact Filecoin team or use their faucet
# FILECOIN_PIN_ENABLED=false

# Filecoin wallet private key for Calibration testnet
# Required if FILECOIN_PIN_ENABLED=true
# Format: 0x followed by 64 hex characters
# NEVER share or commit this private key
# FILECOIN_PIN_PRIVATE_KEY=0xYourFilecoinPrivateKeyHere

# Filecoin Calibration testnet RPC endpoint (default: https://api.calibration.node.glif.io/rpc/v1)
# Only change if using a different RPC provider
# FILECOIN_PIN_RPC_URL=https://api.calibration.node.glif.io/rpc/v1
